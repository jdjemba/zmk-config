/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                               &kp N6          &kp N7    &kp N8     &kp N9   &kp N0    &kp DEL
&kp TAB    &kp Q   &kp W   &kp E     &kp R      &kp T                                &kp Y           &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A   &kp S   &kp D     &kp F      &kp G                                &kp H           &kp J     &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V      &kp B     &kp C_MUTE    &none        &kp N           &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                   &to 4   &kp LALT  &kp LCTRL  &kp LGUI  &lt 1 BSPC    &lt 2 SPACE  &mt RALT ENTER  &kp RGUI  &kp LALT   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_media_layer {
            display-name = "Nav";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &none      &none         &none       &none         &none                            &none        &none         &none       &none          &none    &trans
&trans  &none      &kp C_PREV    &kp C_PP    &kp C_NEXT    &kp C_BRI_INC                    &kp HOME     &kp PG_DN     &kp PG_UP   &kp END        &kp TAB  &trans
&trans  &kp PSCRN  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &kp C_BRI_DEC                    &kp LEFT     &kp DOWN      &kp UP      &kp RIGHT      &none    &trans
&trans  &none      &none         &none       &none         &none          &trans    &trans  &kp LS(TAB)  &kp LC(LEFT)  &kp LC(UP)  &kp LC(RIGHT)  &none    &trans
                   &trans        &trans      &trans        &trans         &trans    &trans  &trans       &trans        &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "NavMedia";
        };

        num_layer {
            display-name = "Num";
            bindings = <
&trans  &none   &none   &none   &none   &none                     &none         &none      &none      &none      &none       &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &none       &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp KP_MINUS  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_N0   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_COMMA  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans     &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        lol_base_layer {
            display-name = "LoL base";
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                             &kp N6          &kp N7    &kp N8     &kp N9   &kp N0    &kp DEL
&kp TAB    &kp Q   &kp W   &kp E     &kp R      &kp T                              &kp Y           &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp GRAVE  &kp A   &kp S   &kp D     &kp F      &kp G                              &kp H           &kp J     &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V      &kp B   &kp C_MUTE    &none        &kp N           &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                   &to 0   &kp LALT  &kp LCTRL  &mo 4   &kp SPACE     &lt 3 SPACE  &mt RALT ENTER  &kp RGUI  &kp RALT   &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        lol_extra_layer {
            bindings = <
&trans  &trans  &trans     &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&kp P   &kp F2  &kp F3     &kp F4  &kp F5  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&kp M   &kp K   &kp L      &kp Y   &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp ENTER  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans     &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "LoL extra";
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&none              &none         &none         &none         &none         &none                         &none        &none  &none  &none  &none  &none
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none        &none  &none  &none  &none  &none
&ext_power EP_TOG  &none         &none         &none         &none         &bootloader                   &bootloader  &none  &none  &none  &none  &none
&none              &none         &none         &none         &none         &sys_reset    &none    &none  &sys_reset   &none  &none  &none  &none  &none
                                 &none         &none         &none         &none         &none    &none  &none        &none  &none  &none
            >;
        };
    };
};
